{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","React","createElement","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","NavLink","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerIsOpen","setDrawerIsOpen","useState","closeDrawerHandler","Fragment","openDrawerHandler","Link","logoutTimer","Users","lazy","UserPlaces","NewPlace","UpdatePlace","Auth","App","console","log","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","expirationDate","jwtDecodedData","jwtDecode","renewedDate","Date","getTime","expireTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"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","file":"static/js/main.5b3ea7a2.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  login: () => {},\n  logout: () => {}\n});","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n    return (<header className=\"main-header\">\n        {props.children}  {/* 부모 컴포넌트로부터 전달된 children을 렌더링 */}\n    </header>);\n};\n\nexport default MainHeader;","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\n\nimport './NavLinks.css'\n\nconst NavLinks = props => {\n    const auth = useContext(AuthContext);\n\n    return (\n        <ul className=\"nav-links\">\n            <li>\n                <NavLink to='/' exact> ALL USERS</NavLink>\n            </li>\n            {auth.isLoggedIn && (\n                <li>\n                    <NavLink to={`/${auth.userId}/places`}> My Places</NavLink>\n                </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                    <NavLink to='/places/new'> Add Places</NavLink>\n                </li>\n            )}\n            {!auth.isLoggedIn && (\n                <li>\n                    <NavLink to='/auth'> Authenticate</NavLink>\n                </li>\n            )}\n            {auth.isLoggedIn &&\n                <li>\n                    <button onClick={auth.logout}>\n                        Logout\n                    </button>\n                </li>}\n        </ul>\n    );\n};\n\nexport default NavLinks;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group'\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n    const content = (\n        <CSSTransition\n            in={props.show}\n            timeout={200}\n            classNames=\"slide-in-left\"\n            mountOnEnter\n            unmountOnExit\n        >\n            <aside className=\"side-drawer\" onClick={props.onClick}>\n                {props.children}\n            </aside>\n        </CSSTransition>\n    );\n\n    return (\n        ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"))\n    );\n};\n\nexport default SideDrawer;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport './MainNavigation.css';\n\n\nconst MainNavigation = props => {\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n\tconst openDrawerHandler = () => {\n\t\tsetDrawerIsOpen(true);\n\t};\n\n\tconst closeDrawerHandler = () => {\n\t\tsetDrawerIsOpen(false);\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n\t\t\t<SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n\t\t\t\t<nav className=\"main-navigation__drawer-nav\">\n\t\t\t\t\t<NavLinks />\n\t\t\t\t</nav>\n\t\t\t</SideDrawer>\n\t\t\t{/* // <h1>부모 컴포넌트</h1> <<-- 부모 컴포넌트 구역 */}\n\t\t\t<MainHeader>\n\t\t\t\t{/* <p>MainHeader 태그 안쪽의 코드는 MainHeader(자식) 컴포넌트 구역을 렌더링 한다.</p> */}\n\t\t\t\t<button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n\t\t\t\t\t<span />\n\t\t\t\t\t<span />\n\t\t\t\t\t<span />\n\t\t\t\t</button>\n\t\t\t\t<h1 className=\"main-navigation__title\">\n\t\t\t\t\t<Link to=\"/\">Your Places</Link>\n\t\t\t\t</h1>\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\n\t\t\t\t\t<NavLinks />\n\t\t\t\t</nav>\n\t\t\t</MainHeader>\n\t\t</React.Fragment>\n\t)\n\n\t// return (\n\t//     <React.Fragment>\n\t//         {drawerIsOpen ? <Backdrop onClick={closeDrawer} /> : null}\n\t//         {drawerIsOpen && <Backdrop />}\n\t//         {drawerIsOpen ? (<SideDrawer>\n\t//             <nav className=\"main-navigation__drawer-nav\">\n\t//                 <NavLinks />\n\t//             </nav>\n\t//         </SideDrawer>) : null}\n\t//         {/* // <h1>부모 컴포넌트</h1> <<-- 부모 컴포넌트 구역 */}\n\t//         <MainHeader>\n\t//             {/* <p>MainHeader 태그 안쪽의 코드는 MainHeader(자식) 컴포넌트 구역을 렌더링 한다.</p> */}\n\t//             <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\n\t//                 <span />\n\t//                 <span />\n\t//                 <span />\n\t//             </button>\n\t//             <h1 className=\"main-navigation__title\">\n\t//                 <Link to=\"/\">Your Places</Link>\n\t//             </h1>\n\t//             <nav className=\"main-navigation__header-nav\">\n\t//                 <NavLinks />\n\t//             </nav>\n\t//         </MainHeader>\n\t//     </React.Fragment>\n\t// )\n};\n\nexport default MainNavigation;","import { useState, useCallback, useEffect } from \"react\";\nimport {jwtDecode} from 'jwt-decode';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((userId, token, expirationDate) => {\n    setToken(token);\n    setUserId(userId);\n    const jwtDecodedData = jwtDecode(token);\n    \n    const renewedDate =\n      expirationDate || new Date(new Date().getTime() + jwtDecodedData.expireTime);\n    setTokenExpirationDate(renewedDate);\n\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId,\n      token,\n      expiration: renewedDate.toISOString()\n    }));\n  }, [])\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    // console.log('Logout')\n    localStorage.removeItem(\"userData\");\n  }, [])\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      (new Date(storedData.expiration) > new Date())\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login])\n\n  return { userId, token, login, logout};\n};","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import Users        from './user/pages/Users';\n// import UserPlaces   from './places/pages/UserPlaces';\n// import NewPlace     from './places/pages/NewPlace';\n// import UpdatePlace  from './places/pages/UpdatePlace';\n// import Auth         from './user/pages/Auth';\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\n\n\n\n\n// function App() {\n//   return <h1>Let's start!</h1>;\n// }\n\nconst App = () => {\n  console.log(\"#Start APP#\");\n  const { userId, token, login, logout } = useAuth();\n\n  let routes;\n\n  if (token) {\n    /** 로그인 중일 때 */\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact={true}>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        {/* <Route path=\"/places/new\" element={<NewPlace />} /> */}\n        {/* /places/new 링크에서 new가 placeId로 인식되기 때문에\n        /places/new 와 /places/:placeId 둘다 렌더링 된다.\n        이를 해결 하기 위해서는 <Switch>태그를 사용해 조건에 부합하는\n        하나의링크만 렌더링 되게끔 해야 한다. */}\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        {/* 위에 정의된 경로 외에 경로는 전부 '/'로 향하게 한다. */}\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    /** 로그인 중이 아닐 때 */\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact={true}>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  // return <h1>Let's start!</h1>;\n  return (\n    <AuthContext.Provider value={{\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout\n    }}>\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }>\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nconsole.log(\"#Start index.js#\");\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}