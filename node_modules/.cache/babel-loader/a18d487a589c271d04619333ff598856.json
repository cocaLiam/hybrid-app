{"ast":null,"code":"import React,{useRef,useEffect}from\"react\";import'./Map.css';const Map=props=>{const mapRef=useRef();const{center,zoom}=props;// const [center, zoom] = [props.center, props.zoom];\n// const { center, zoom } = { center: props.center, zoom: props.zoom };\nuseEffect(()=>{const map=new window.google.maps.Map(mapRef.current,{center:center,zoom:zoom});new window.google.maps.Marker({position:center,map:map});},[center,zoom]);return/*#__PURE__*/React.createElement(\"div\",{ref:mapRef,className:`map \n      ${props.className} \n      style={props.style}`});};export default Map;// /**\n//  * 설명:\n//  * 1. useRef()함수로 참조변수(inputRef) 생성\n//  * 2. 참조변수(inputRef)를 input 태그의 ref 속성에 대입하여 input 태그의 DOM 요소에 직접 접근을 가능하게 함\n//  * 3. [입력 필드에 포커스] 버튼 Click 시, focusInput 함수 실행\n//  * 4. inputRef.current.focus(); 함수로 input 태그에 포커싱\n//  * \n//  * 동작 : [입력 필드에 포커스]라는 버튼을 눌렀는데, \n//  * [여기에 입력] 이라는 text 필드에 커서(포커스)가 생기도록함\n//  */\n// import React, { useRef } from 'react';\n// const FocusInput = () => {\n//   // useRef를 사용하여 inputRef라는 변수를 생성합니다.\n//   const inputRef = useRef();\n//   const focusInput = () => {\n//     // inputRef.current는 해당 input 요소를 참조합니다.\n//     // focus() 메서드를 호출하여 입력 필드에 포커스를 줍니다.\n//     inputRef.current.focus();\n//   };\n//   return (\n//     <div>\n//       {/* input 요소에 ref 속성을 설정하여 inputRef와 연결합니다. */}\n//       <input ref={inputRef} type=\"text\" placeholder=\"여기에 입력\" />\n//       <button onClick={focusInput}>입력 필드에 포커스</button>\n//     </div>\n//   );\n// };\n// export default FocusInput;","map":{"version":3,"names":["React","useRef","useEffect","Map","props","mapRef","center","zoom","map","window","google","maps","current","Marker","position","createElement","ref","className"],"sources":["C:/Users/IMWONHYEOK/study/react/section_13_front/src/shared/components/UIElements/Map.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nimport './Map.css'\n\nconst Map = props => {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n  // const [center, zoom] = [props.center, props.zoom];\n  // const { center, zoom } = { center: props.center, zoom: props.zoom };\n\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n\n    new window.google.maps.Marker(\n      {\n        position: center,\n        map: map\n      }\n    );\n  }, [center, zoom])\n\n  return (\n    <div ref={mapRef}\n      className={`map \n      ${props.className} \n      style={props.style}`}\n    ></div>\n  );\n}\nexport default Map;\n\n\n\n\n// /**\n//  * 설명:\n//  * 1. useRef()함수로 참조변수(inputRef) 생성\n//  * 2. 참조변수(inputRef)를 input 태그의 ref 속성에 대입하여 input 태그의 DOM 요소에 직접 접근을 가능하게 함\n//  * 3. [입력 필드에 포커스] 버튼 Click 시, focusInput 함수 실행\n//  * 4. inputRef.current.focus(); 함수로 input 태그에 포커싱\n//  * \n//  * 동작 : [입력 필드에 포커스]라는 버튼을 눌렀는데, \n//  * [여기에 입력] 이라는 text 필드에 커서(포커스)가 생기도록함\n//  */\n\n// import React, { useRef } from 'react';\n\n// const FocusInput = () => {\n//   // useRef를 사용하여 inputRef라는 변수를 생성합니다.\n//   const inputRef = useRef();\n\n//   const focusInput = () => {\n//     // inputRef.current는 해당 input 요소를 참조합니다.\n//     // focus() 메서드를 호출하여 입력 필드에 포커스를 줍니다.\n//     inputRef.current.focus();\n//   };\n\n//   return (\n//     <div>\n//       {/* input 요소에 ref 속성을 설정하여 inputRef와 연결합니다. */}\n//       <input ref={inputRef} type=\"text\" placeholder=\"여기에 입력\" />\n//       <button onClick={focusInput}>입력 필드에 포커스</button>\n//     </div>\n//   );\n// };\n\n// export default FocusInput;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAEhD,MAAO,WAAW,CAElB,KAAM,CAAAC,GAAG,CAAGC,KAAK,EAAI,CACnB,KAAM,CAAAC,MAAM,CAAGJ,MAAM,CAAC,CAAC,CAEvB,KAAM,CAAEK,MAAM,CAAEC,IAAK,CAAC,CAAGH,KAAK,CAC9B;AACA;AAGAF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAM,GAAG,CAAG,GAAI,CAAAC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACR,GAAG,CAACE,MAAM,CAACO,OAAO,CAAE,CACrDN,MAAM,CAAEA,MAAM,CACdC,IAAI,CAAEA,IACR,CAAC,CAAC,CAEF,GAAI,CAAAE,MAAM,CAACC,MAAM,CAACC,IAAI,CAACE,MAAM,CAC3B,CACEC,QAAQ,CAAER,MAAM,CAChBE,GAAG,CAAEA,GACP,CACF,CAAC,CACH,CAAC,CAAE,CAACF,MAAM,CAAEC,IAAI,CAAC,CAAC,CAElB,mBACEP,KAAA,CAAAe,aAAA,QAAKC,GAAG,CAAEX,MAAO,CACfY,SAAS,CAAE;AACjB,QAAQb,KAAK,CAACa,SAAS;AACvB,0BAA2B,CACjB,CAAC,CAEX,CAAC,CACD,cAAe,CAAAd,GAAG,CAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}