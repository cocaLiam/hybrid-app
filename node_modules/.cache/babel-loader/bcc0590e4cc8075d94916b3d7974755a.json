{"ast":null,"code":"import React,{useEffect,useState,useContext}from\"react\";import{useParams,useHistory}from'react-router-dom';import Input from\"../../shared/components/FormElements/Input\";import Button from\"../../shared/components/FormElements/Button\";import Card from\"../../shared/components/UIElements/Card\";import LoadingSpinner from\"../../shared/components/UIElements/LoadingSpinner\";import ErrorModal from\"../../shared/components/UIElements/ErrorModal\";import{VALIDATOR_REQUIRE,VALIDATOR_MINLENGTH}from'../../shared/util/validators';import{AuthContext}from'../../shared/context/auth-context';import{useForm}from\"../../shared/hooks/form-hook\";import{useHttpClient}from'../../shared/hooks/http-hook';import\"./PlaceForm.css\";const UpdatePlace=()=>{const auth=useContext(AuthContext);const{isLoading,error,sendRequest,clearError}=useHttpClient();const[loadedPlace,setLoadedPlace]=useState();const placeId=useParams().placeId;const history=useHistory();// 서버의 경우 Data 지연이 일어나는 상황을 재현 해보려고 주석 처리함.\n// const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\nconst[formState,inputHandler,setFormData]=useForm({title:{value:\"\",isValid:false},description:{value:\"\",isValid:false}},false);// const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\nuseEffect(()=>{const fetchPlace=async()=>{try{const responseData=await sendRequest(`${process.env.REACT_APP_BASE}${process.env.REACT_APP_PLACES_ROUTE}/${placeId}`);setLoadedPlace(responseData.place);setFormData({title:{value:responseData.place.title,isValid:true},description:{value:responseData.place.description,isValid:true}},true);}catch(err){}};fetchPlace();},[sendRequest,placeId,setFormData]);const placeUpdateSubmitHandler=async event=>{event.preventDefault();try{await sendRequest(`${process.env.REACT_APP_BASE}${process.env.REACT_APP_PLACES_ROUTE}/${placeId}`,'PATCH',JSON.stringify({title:formState.inputs.title.value,description:formState.inputs.description.value}),{\"Content-Type\":\"application/json\",Authorization:`Bearer ${auth.token}`});history.push('/'+auth.userId+'/places');}catch(err){}};if(isLoading){return/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(LoadingSpinner,null));}if(!loadedPlace&&!error){return/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Could not find place!\")));}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ErrorModal,{showError:error,onClear:clearError}),!isLoading&&loadedPlace&&/*#__PURE__*/React.createElement(\"form\",{className:\"place-form\",onSubmit:placeUpdateSubmitHandler},/*#__PURE__*/React.createElement(Input,{id:\"title\",element:\"input\",type:\"text\",label:\"Title\",validators:[VALIDATOR_REQUIRE()],errorText:\"Please enter a valid title.\",onInput:inputHandler,initialValue:loadedPlace.title,initialValid:true}),/*#__PURE__*/React.createElement(Input,{id:\"description\",element:\"textarea\",label:\"Description\",validators:[VALIDATOR_MINLENGTH(5)],errorText:\"Please enter a valid description (min. 5 characters).\",onInput:inputHandler,initialValue:loadedPlace.description,initialValid:true}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",disabled:!formState.isValid},\"UPDATE PLACE\")));};export default UpdatePlace;","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","useHistory","Input","Button","Card","LoadingSpinner","ErrorModal","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","AuthContext","useForm","useHttpClient","UpdatePlace","auth","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","history","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","process","env","REACT_APP_BASE","REACT_APP_PLACES_ROUTE","place","err","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","createElement","className","Fragment","showError","onClear","onSubmit","id","element","type","label","validators","errorText","onInput","initialValue","initialValid","disabled"],"sources":["/mnt/c/Users/IMWONHYEOK/study/react/section_13_front/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\n\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nimport \"./PlaceForm.css\";\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  // 서버의 경우 Data 지연이 일어나는 상황을 재현 해보려고 주석 처리함.\n  // const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  // const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BASE}${process.env.REACT_APP_PLACES_ROUTE}/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) { }\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BASE}${process.env.REACT_APP_PLACES_ROUTE}/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${auth.token}`\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) { }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal showError={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}