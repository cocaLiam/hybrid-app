{"ast":null,"code":"import React from\"react\";import ReactDOM from'react-dom';import{CSSTransition}from\"react-transition-group\";import Backdrop from'./Backdrop';import'./Modal.css';const ModalOverlay=props=>{const content=/*#__PURE__*/React.createElement(\"div\",{className:`modal ${props.className}`,style:props.style},/*#__PURE__*/React.createElement(\"header\",{className:`modal__header ${props.headerClass}`},/*#__PURE__*/React.createElement(\"h2\",null,props.header)),/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.onSubmit?props.onSubmit:event=>{event.preventDefault();}},/*#__PURE__*/React.createElement(\"div\",{className:`modal__content ${props.contentClass}`},props.children),/*#__PURE__*/React.createElement(\"footer\",{className:`modal__footer ${props.footerClass}`},props.footer)));return ReactDOM.createPortal(content,document.getElementById('modal-hook'));};const Modal=props=>{return/*#__PURE__*/React.createElement(React.Fragment,null,props.show?/*#__PURE__*/React.createElement(Backdrop,{onClick:props.onCancel}):null,/*#__PURE__*/React.createElement(CSSTransition,{in:props.show// CSSTransition 의 in props 가 true 면 mount 하고 false면 unmount 함\n,mountOnEnter:true,unmountOnExit:true,timeout:200,classNames:\"modal\"},/*#__PURE__*/React.createElement(ModalOverlay,props)));};/*\n{drawerIsOpen ? <Backdrop onClick={closeDrawer} /> : null}\n둘의 형상은 동일함 // if drawerIsOpen is True : <Backdrop onClick={closeDrawer} /> 이므로\n{drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n*/export default Modal;","map":{"version":3,"names":["React","ReactDOM","CSSTransition","Backdrop","ModalOverlay","props","content","createElement","className","style","headerClass","header","onSubmit","event","preventDefault","contentClass","children","footerClass","footer","createPortal","document","getElementById","Modal","Fragment","show","onClick","onCancel","in","mountOnEnter","unmountOnExit","timeout","classNames"],"sources":["/mnt/c/Users/IMWONHYEOK/study/react/section_13_front/src/shared/components/UIElements/Modal.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from './Backdrop'\nimport './Modal.css'\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => { event.preventDefault() }\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show ? <Backdrop onClick={props.onCancel} /> : null}\n      {/* {props.show && <Backdrop onClick={props.onCancel} />} <-- 어두운 배경 클릭시 Cancel 핸들러 동작*/}\n\n      <CSSTransition\n        in={props.show} // CSSTransition 의 in props 가 true 면 mount 하고 false면 unmount 함\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\n/*\n{drawerIsOpen ? <Backdrop onClick={closeDrawer} /> : null}\n둘의 형상은 동일함 // if drawerIsOpen is True : <Backdrop onClick={closeDrawer} /> 이므로\n{drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n*/\nexport default Modal;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,OAASC,aAAa,KAAQ,wBAAwB,CAEtD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,aAAa,CAEpB,KAAM,CAAAC,YAAY,CAAGC,KAAK,EAAI,CAC5B,KAAM,CAAAC,OAAO,cACXN,KAAA,CAAAO,aAAA,QAAKC,SAAS,CAAE,SAASH,KAAK,CAACG,SAAS,EAAG,CAACC,KAAK,CAAEJ,KAAK,CAACI,KAAM,eAC7DT,KAAA,CAAAO,aAAA,WAAQC,SAAS,CAAE,iBAAiBH,KAAK,CAACK,WAAW,EAAG,eACtDV,KAAA,CAAAO,aAAA,WAAKF,KAAK,CAACM,MAAW,CAChB,CAAC,cACTX,KAAA,CAAAO,aAAA,SACEK,QAAQ,CACNP,KAAK,CAACO,QAAQ,CAAGP,KAAK,CAACO,QAAQ,CAAIC,KAAK,EAAK,CAAEA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CACvE,eAEDd,KAAA,CAAAO,aAAA,QAAKC,SAAS,CAAE,kBAAkBH,KAAK,CAACU,YAAY,EAAG,EACpDV,KAAK,CAACW,QACJ,CAAC,cACNhB,KAAA,CAAAO,aAAA,WAAQC,SAAS,CAAE,iBAAiBH,KAAK,CAACY,WAAW,EAAG,EACrDZ,KAAK,CAACa,MACD,CACJ,CACH,CACN,CACD,MAAO,CAAAjB,QAAQ,CAACkB,YAAY,CAACb,OAAO,CAAEc,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAAC,CAC9E,CAAC,CAED,KAAM,CAAAC,KAAK,CAAGjB,KAAK,EAAI,CACrB,mBACEL,KAAA,CAAAO,aAAA,CAACP,KAAK,CAACuB,QAAQ,MACZlB,KAAK,CAACmB,IAAI,cAAGxB,KAAA,CAAAO,aAAA,CAACJ,QAAQ,EAACsB,OAAO,CAAEpB,KAAK,CAACqB,QAAS,CAAE,CAAC,CAAG,IAAI,cAG1D1B,KAAA,CAAAO,aAAA,CAACL,aAAa,EACZyB,EAAE,CAAEtB,KAAK,CAACmB,IAAM;AAAA,CAChBI,YAAY,MACZC,aAAa,MACbC,OAAO,CAAE,GAAI,CACbC,UAAU,CAAC,OAAO,eAElB/B,KAAA,CAAAO,aAAA,CAACH,YAAY,CAAKC,KAAQ,CACb,CACD,CAAC,CAErB,CAAC,CAED;AACA;AACA;AACA;AACA,EACA,cAAe,CAAAiB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}