{"ast":null,"code":"import React,{useContext}from\"react\";import{useHistory}from\"react-router-dom\";import Input from'../../shared/components/FormElements/Input';import Button from'../../shared/components/FormElements/Button';import ErrorModal from\"../../shared/components/UIElements/ErrorModal\";import LoadingSpinner from\"../../shared/components/UIElements/LoadingSpinner\";import ImageUpload from\"../../shared/components/FormElements/ImageUpload\";import{VALIDATOR_MINLENGTH,VALIDATOR_REQUIRE}from\"../../shared/util/validators\";import{AuthContext}from\"../../shared/context/auth-context\";import{useForm}from\"../../shared/hooks/form-hook\";import{useHttpClient}from\"../../shared/hooks/http-hook\";import\"./PlaceForm.css\";const NewPlace=()=>{const auth=useContext(AuthContext);const{isLoading,error,sendRequest,clearError}=useHttpClient();const[formState,inputHandler]=useForm({title:{value:'',isValid:false},description:{value:'',isValid:false},address:{value:'',isValid:false},image:{value:null,isValid:false}},false);const history=useHistory();const placeSubmitHandler=async event=>{// ADD PLACE 를 누르면 새로고침 되는게 Default 설정이므로 새로고침 안되게끔 방지하는 코드\nevent.preventDefault();try{/** Image 가 아닌 경우 JSON */// await sendRequest(\n//   `${API_BASE.home}${API_BASE.placesRoutes}${API_PLACES.root}`,\n//   \"POST\",\n//   JSON.stringify({\n//     title: formState.inputs.title.value,\n//     description: formState.inputs.description.value,\n//     address: formState.inputs.address.value,\n//     creator: auth.userId\n//   }),\n//   { \"Content-Type\": \"application/json\" }\n// );\n// // Redirect the user to a different page\n// history.push('/');\nconst formData=new FormData();formData.append('title',formState.inputs.title.value);formData.append('description',formState.inputs.description.value);formData.append('address',formState.inputs.address.value);// formData.append('creator', auth.userId);\nformData.append('image',formState.inputs.image.value);await sendRequest(`${process.env.REACT_APP_BASE}${process.env.REACT_APP_PLACES_ROUTE}${process.env.REACT_APP_ROOT}`,\"POST\",formData,{Authorization:`Bearer ${auth.token}`});// await sendRequest('http://localhost:5000/api/places', 'POST', formData);\nhistory.push('/');}catch(err){}};// console.log(`ADD PLACE 활성화 : ${formState.isValid}`);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ErrorModal,{showError:error,onClear:clearError}),/*#__PURE__*/React.createElement(\"form\",{className:\"place-form\",onSubmit:placeSubmitHandler},isLoading&&/*#__PURE__*/React.createElement(LoadingSpinner,{asOverlay:true}),/*#__PURE__*/React.createElement(Input,{id:\"title\",element:\"input\",type:\"text\",label:\"Title\",validators:[VALIDATOR_REQUIRE()],errorText:\"Please Enter a valid title\",onInput:inputHandler}),/*#__PURE__*/React.createElement(Input,{id:\"description\",element:\"textarea\",label:\"Description\",validators:[VALIDATOR_MINLENGTH(5)],errorText:\"Please Enter a valid description (at least 5 characters)\",onInput:inputHandler}),/*#__PURE__*/React.createElement(Input,{id:\"address\",element:\"input\",label:\"Address\",validators:[VALIDATOR_REQUIRE()],errorText:\"Please Enter a valid address\",onInput:inputHandler}),/*#__PURE__*/React.createElement(ImageUpload,{center:true,id:\"image\",onInput:inputHandler,errorText:\"please provide a image\"}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",disabled:!formState.isValid},\"ADD PLACE\")));};export default NewPlace;//","map":{"version":3,"names":["React","useContext","useHistory","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","AuthContext","useForm","useHttpClient","NewPlace","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","image","history","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","env","REACT_APP_BASE","REACT_APP_PLACES_ROUTE","REACT_APP_ROOT","Authorization","token","push","err","createElement","Fragment","showError","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","errorText","onInput","center","disabled"],"sources":["/mnt/c/Users/IMWONHYEOK/study/react/section_13_front/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from \"../../shared/util/validators\";\n\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  }, false);\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    // ADD PLACE 를 누르면 새로고침 되는게 Default 설정이므로 새로고침 안되게끔 방지하는 코드\n    event.preventDefault();\n    try {\n      /** Image 가 아닌 경우 JSON */\n      // await sendRequest(\n      //   `${API_BASE.home}${API_BASE.placesRoutes}${API_PLACES.root}`,\n      //   \"POST\",\n      //   JSON.stringify({\n      //     title: formState.inputs.title.value,\n      //     description: formState.inputs.description.value,\n      //     address: formState.inputs.address.value,\n      //     creator: auth.userId\n      //   }),\n      //   { \"Content-Type\": \"application/json\" }\n      // );\n      // // Redirect the user to a different page\n      // history.push('/');\n\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      // formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value);\n\n      await sendRequest(\n        `${process.env.REACT_APP_BASE}${process.env.REACT_APP_PLACES_ROUTE}${process.env.REACT_APP_ROOT}`,\n        \"POST\",\n        formData,\n        { Authorization: `Bearer ${auth.token}` },\n      );\n      // await sendRequest('http://localhost:5000/api/places', 'POST', formData);\n      history.push('/');\n    } catch (err) { }\n  }\n  // console.log(`ADD PLACE 활성화 : ${formState.isValid}`);\n  return (\n    <React.Fragment>\n      <ErrorModal showError={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please Enter a valid title\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please Enter a valid description (at least 5 characters)\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please Enter a valid address\"\n          onInput={inputHandler}\n        />\n        <ImageUpload center \n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"please provide a image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace; //"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}